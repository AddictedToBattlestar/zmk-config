/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
  };
};

#define SYMBOL  1
#define NUMPAD  2
#define FUNPAD  3
#define BLU2TH  4

// IntelliJ
#define RENAME LS(F6)
#define EXTRACT LA(LG(M))
#define RUN LA(LG(R))

// Put Mac to sleep
#define SLEEP LC(LS(K_PWR))

/ {
        // This behaviors section has to be here for some reason in order for the &mt and bluetooth keys below to get along.  
        // I have no idea why that is the case.
        behaviors {
          hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          };
          guitl: gui_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "GUI_TILDE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp TILDE>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
          };
};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |||||  Y  |  U  |  I  |  O  |  P  |  \   |
// | TAB  |  A  |  S  |  D  |  F  |  G  |||||  H  |  J  |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |||||  N  |  M  |  ,  |  .  |  /  | ENT  |
//                    |CTRL |moSYM| GUI ||||| SPC |moNUM| ALT |
                        bindings = <
   &guitl    &kp Q     &kp W     &kp E     &kp R      &kp T           &kp Y     &kp U      &kp I     &kp O     &kp P     &kp BSLH
   &kp TAB   &kp A     &kp S     &kp D     &kp F      &kp G           &kp H     &kp J      &kp K     &kp L     &kp SEMI  &kp SQT
   &kp LSHFT &kp Z     &kp X     &kp C     &kp V      &kp B           &kp N     &kp M      &kp COMMA &kp DOT   &kp FSLH  &mt RSHFT RET
                                 &kp LCTRL &mo SYMBOL &kp LGUI        &kp SPACE &lt NUMPAD TAB &kp RALT
                        >;
                };

                symbol_layer {
                        label = "SYMBOL";
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |||||  ^  |  &  |  *  | "|" |  (  |  )   |
// |  `   |     |     |     |  _  |  -  ||||| LFT |  UP | RGT |     |  {  |  }   |
// | MUTE |VOL D|VOL U|     |  =  |  +  ||||| LFT | DWN | RGT |     |  [  |  ]   |
//                    |moBLU|     |     |||||     |     |     |
                        bindings = <
   &kp TILDE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR  &kp PRCNT       &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp PIPE   &kp LPAR  &kp RPAR
   &kp GRAVE  &trans       &trans       &trans       &kp UNDER &kp MINUS       &kp LEFT  &kp UP    &kp RIGHT       &trans     &kp LBRC  &kp RBRC
   &trans     &kp K_MUTE   &kp C_VOL_DN &kp C_VOL_UP &kp EQUAL &kp PLUS        &kp LEFT  &kp DOWN  &kp RIGHT       &trans     &kp LBKT  &kp RBKT
                                        &mo BLU2TH   &trans    &trans          &kp BSPC  &trans    &trans  
                        >;
                };

                numpad_layer {
                        label = "NUMPAD";
// -----------------------------------------------------------------------------------------
// |      |  %  |  7  |  8  |  9  |  $  |||||     |     |     |     |     |      |
// |      |  /  |  4  |  5  |  6  |  -  ||||| LFT |  UP | RGT |     |     |      |
// |      |  *  |  1  |  2  |  3  |  +  ||||| LFT | DWN | RGT |     |     |      |
//                    |  0  |  .  |     |||||     |     |moFUN|
                        bindings = <
   &trans  &kp PRCNT       &kp N7   &kp N8    &kp N9    &kp DLLR    &trans    &trans    &trans      &trans  &trans  &trans
   &trans  &kp FSLH        &kp N4   &kp N5    &kp N6    &kp MINUS   &kp LEFT  &kp UP    &kp RIGHT   &trans  &trans  &trans
   &trans  &kp KP_MULTIPLY &kp N1   &kp N2    &kp N3    &kp PLUS    &kp LEFT  &kp DOWN  &kp RIGHT   &trans  &trans  &trans
                                    &kp N0    &kp DOT   &trans      &kp BSPC  &trans    &mo FUNPAD
                        >;
                };

                funcpad_layer {
                        label = "FUNPAD";
// -----------------------------------------------------------------------------------------
// |      | F12 | F7  | F8  | F9  | REN |||||     |     |     |     |     |      |
// |      | F11 | F4  | F5  | F6  | EXT ||||| LFT |  UP | RGT |     |     |      |
// |      | F10 | F1  | F2  | F3  | RUN ||||| LFT | DWN | RGT |     |     |      |
//                    |     |     | SLP |||||     |     |     |
                        bindings = <
   &trans  &kp F12   &kp F7    &kp F8    &kp F9    &kp RENAME      &trans    &trans    &trans    &trans    &trans  &trans
   &trans  &kp F11   &kp F4    &kp F5    &kp F6    &kp EXTRACT     &kp LEFT  &kp UP    &kp RIGHT   &trans  &trans  &trans
   &trans  &kp F10   &kp F1    &kp F2    &kp F3    &kp RUN         &kp LEFT  &kp DOWN  &kp RIGHT   &trans  &trans  &trans
                               &trans    &trans    &kp SLEEP       &kp BSPC  &trans    &trans
                        >;
                };

                bluetooth_layer {
                        label = "BLU2TH";
// -----------------------------------------------------------------------------------------
// | BT1  | BT2 | BT3 | BT4 | BT5 |     |||||     |     |     |     |     |      |
// |BTCLR |     |     |     |     |     |||||     |     |     |     |     |      |
// |      |     |     |     |     |     |||||     |     |     |     |     |      |
//                    |     |     |     |||||     |     |     |
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans       &trans   &trans    &trans    &trans    &trans    &trans
   &bt BT_CLR   &trans       &trans       &trans       &trans       &trans       &trans   &trans    &trans    &trans    &trans    &trans
   &trans       &trans       &trans       &trans       &trans       &trans       &trans   &trans    &trans    &trans    &trans    &trans
                                          &trans       &trans       &trans       &trans   &trans    &trans
                        >;
                };
        };
};
